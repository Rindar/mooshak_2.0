@using System.Data.Entity
@using System.Web.DynamicData
@using System.Web.UI.WebControls
@using mooshak_2._0.Models.Entities
@using mooshak_2._0.Models.ViewModels
@using mooshak_2._0.Services
@model mooshak_2._0.Models.ViewModels.AllUsersAndSomeCourseViewModel
@{
    ViewBag.Title = "Add users to " + @Model.theCourse.title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add users to @Model.theCourse.title</h2>
@using (Html.BeginForm("AddTheUserToTheCourse", "Course", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.Label("User", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.HiddenFor(m => m.theCourse.id)
                @Html.DropDownListFor(m => m.selectedUserId, new SelectList(Model.listOfUsers.Select(x => new {Value = x.Id, Text = x.Email}), "Value", "Text"),
                    "Select user to add", new {@class = "btn btn-default dropdown-toggle", id = "dropdownSelecton"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add to course" onclick="updateViewModel" class="btn btn-default" id="addToCourseButton"/>
            </div>
        </div>
    </div>
    <div>
        @Html.ActionLink("Back to List", "CourseIndex")
    </div>
}
<br/>
<hr/>


@if (Model.allUsersInCourse.Count == 0)
{
    <h4>Nobody is attending this course</h4>
}
else
{
    <h4>Students attending @Html.DisplayFor(modelItem => Model.theCourse.title)</h4>



    <div class="table-responsive">
        <table class="table">
            <thead class="thead-inverse">
            <tr>
                <th>Username</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.allUsersInCourse)
            {
                string userName = (from users in Model.listOfUsers where item.userId == users.Id select users.Email).SingleOrDefault();
                if (userName != default(string))
                {
                    <tr>
                        <td>
                            <a>@userName</a>
                        </td>
                        <td>
                            <a class="pointer-arrow" onclick="deleteFromCourse(@Html.DisplayFor(modelItem => item.id))">Remove</a>
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
}

    <script>
        function deleteFromCourse(id) {
            window.location.assign("/Course/RemoveUser/" + id);
        }
    </script>

    <style type="text/css">
        .pointer-arrow:hover {
            cursor: pointer;
        }
    </style>
