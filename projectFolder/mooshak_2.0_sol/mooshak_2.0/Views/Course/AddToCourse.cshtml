@using System.Data.Entity
@using System.Web.DynamicData
@using System.Web.UI.WebControls
@using mooshak_2._0.Models.Entities
@using mooshak_2._0.Models.ViewModels
@using mooshak_2._0.Services
@model mooshak_2._0.Models.ViewModels.AllUsersAndSomeCourseViewModel
@{
    ViewBag.Title = "Add users to " + @Model.theCourse.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add users to @Model.theCourse.Title</h2>
@using (Html.BeginForm("AddTheUserToTheCourse", "Course", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.Label("User", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.HiddenFor(m => m.theCourse.ID)
                @Html.DropDownListFor(m => m.selectedUserId, new SelectList(Model.listOfUsers.Select(x => new {Value = x.Id, Text = x.Email}), "Value", "Text"),
                    "Select user to add", new {@class = "btn btn-default dropdown-toggle", id = "dropdownSelecton"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add to course" onclick="updateViewModel" class="btn btn-default" id="addToCourseButton"/>
            </div>
        </div>
    </div>
}

<table class="table">

    <h4>Users attending @Html.DisplayFor(modelItem => Model.theCourse.Title)</h4>

    <div class="list-group">
        @foreach (var item in Model.allUsersInCourse)
        {
            string userName = (from users in Model.listOfUsers where item.userId == users.Id select users.Email).SingleOrDefault();
            if (userName != default(string))
            {
                <tr>
                    <td style="text-align: center;">
                        <a class="list-group-item">@userName</a>
                    </td>
                    <td style="text-align: center;">
                        <a class="pointer-arrow" onclick="deleteFromCourse(@Html.DisplayFor(modelItem => item.id))">Remove</a>
                    </td>
                </tr>
            }
        }
    </div>

</table>

<div>
    @Html.ActionLink("Back to List", "CourseIndex")
</div>

<script>
    function deleteFromCourse(id)
    {
        var toDelete = confirm("Are you sure you want to remove this user from this course?")
        if(toDelete == true)
        {
            window.location.assign("/Course/RemoveUser/" + id);
        }

    }
</script>